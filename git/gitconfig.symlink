# Local/private config goes in the include
[include]
    path = ~/.gitconfig.local
    
[hub]
    protocol = https

[alias]
    # branch
    b = branch -v
    br = branch
    bdiff = !bash -c 'git diff $(git merge-base "$1" "$2") "$2" "${@: 3}" ' -
    blog = !bash -c 'git log $(git merge-base "$1" "$2").."$2"' -
    bclean = !bash -c 'git fetch --prune && git branch -d $(git branch --merged=master | grep -v master)'

    # checkout
    co = checkout
    copr = !sh -c 'hub pr checkout ${1}' -

    # dco signoff
    dco = config --add format.signOff true

    # fetch
    f = fetch --all --prune --tags

    # log
    incoming = log ..origin/master
    last = log -1 HEAD
    # To see what new commits have been created by the last command (typically after a "git pull") :
    # Use like
    #   git pull
    #   git new
    #   git new origin/master

    # rebase
    rem = rebase origin/HEAD
    reu = rebase upstream/HEAD

    # remote
    r = remote -v                     # show remotes (verbose)
    prune-all = !git remote | xargs -n 1 git remote prune # prune stale branches

    # status
    s = status
    st = status

    # reset
    unstage = reset HEAD              # remove files from index (tracking)
    uncommit = reset --soft HEAD^     # go back before last commit, with files in uncommitted state
    undo = reset --soft HEAD^

[color]
    branch = auto
    diff = auto
    interactive = auto
    status = auto
    ui = true

[core]
    excludesfile = ~/.gitignore
    editor = vim
    pager = less -F -X

[apply]
    whitespace = nowarn

[mergetool]
    keepBackup = false

[diff]
    tool = vscode
    # Git diff will use (i)ndex, (w)ork tree, (c)ommit and (o)bject
    # instead of a/b/c/d as prefixes for patches
    mnemonicprefix = true
    algorithm = patience
    guitool = vscode

[merge]
    tool = vscode

[mergetool "vscode"]
    cmd = code --wait \"$MERGED\"

[difftool "vscode"]
    cmd = code --wait --diff \"$LOCAL\" \"$REMOTE\"

[difftool]
    prompt = false

[commit]
    gpgsign = true

[help]
    autocorrect = 1

[push]
    # See `git help config` (search for push.default)
    # for more information on different options of the below setting.
    #
    # Setting to git 2.0 default to suppress warning message
    default = simple

[fetch]
    prune = true

[init]
    defaultBranch = main

[filter "lfs"]
	clean = git-lfs clean -- %f
	smudge = git-lfs smudge -- %f
	process = git-lfs filter-process
	required = true
