source $HOME/.local/share/antigen.zsh
# Load Antigen configurations
antigen init ~/.antigenrc

# Fix gpg before anything gets sourced. This was difficult to track down
# and I'm still not 100% sure what is happening. This was the debug tool that
# got me this far:
#  echo "test" | gpg --clearsign
if [ Linux = $(uname) ]; then
    export GPG_TTY=$(tty)
fi

# https://arslan.io/2019/01/07/using-the-ipad-pro-as-my-development-machine/
exit() {
  if [[ -z $TMUX ]]; then
    builtin exit
    return
  fi

  panes=$(tmux list-panes | wc -l)
  wins=$(tmux list-windows | wc -l)
  count=$(($panes + $wins - 1))
  if [ $count -eq 1 ]; then
    tmux detach
  else
    builtin exit
  fi
}

# shortcut to this dotfiles path is $ZSH
export ZSH=$HOME/.local/share/zsh

# all of our zsh files
typeset -U config_files
config_files=($ZSH/**/*.zsh)

# load the path files
for file in ${(M)config_files:#*/path.zsh}
do
  source $file
done

# load everything but the path and completion files
for file in ${${config_files:#*/path.zsh}:#*/completion.zsh}
do
  source $file
done

# initialize autocomplete here, otherwise functions won't be loaded
autoload -U compinit
compinit

# load every completion after autocomplete loads
for file in ${(M)config_files:#*/completion.zsh}
do
  source $file
done

unset config_files

# Stash your environment variables in ~/.localrc. This means they'll stay out
# of your main dotfiles repository (which may be public, like this one), but
# you'll have access to them in your scripts.
if [[ -a ~/.localrc ]]
then
  source ~/.localrc
fi
